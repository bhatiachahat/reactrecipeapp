{"version":3,"sources":["Searchbar.module.css","components/Searchbar.js","utils/axios.js","components/Singlerecipe.js","components/Recipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Searchbar","submitChange","event","console","log","target","value","props","handleChange","submitForm","preventDefault","handleSubmit","query","onSubmit","this","type","className","style","search_input","name","onChange","placeholder","Component","axios","create","baseURL","Singlerecipe","href","content","recipe","shareAs","image","src","alt","label","id","ingredients","length","calories","toFixed","source","Recipe","result","map","index","key","App","setState","state","loading","instance","get","params","q","app_id","app_key","then","data","hits","catch","err","finally","initialstate","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef3e1846.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_input\":\"Searchbar_search_input__1_l6-\"};","import React, { Component } from 'react'\r\nimport style from '../Searchbar.module.css'\r\n\r\nexport default class Searchbar extends Component {\r\n    submitChange=(event)=>{ \r\n        console.log(event.target.value);\r\n        this.props.handleChange(event.target.value);\r\n    }\r\n    submitForm=(event)=>{\r\n        event.preventDefault();\r\n        this.props.handleSubmit(this.props.query);\r\n       \r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                     <form onSubmit={this.submitForm}>\r\n                <div >\r\n  <input type=\"text\" className={style.search_input} name=\"query\" value={this.props.query} onChange={this.submitChange} placeholder=\"Find the best recipes from across the web...\" />\r\n  {/* <button className=\"ui icon button\">\r\n    <i className=\"search icon\">Search</i>\r\n  </button> */}\r\n</div>\r\n</form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL:'https://api.edamam.com',\r\n    //https://api.edamam.com/search\r\n    \r\n} )","import React from 'react'\r\n\r\nexport default function Singlerecipe(props) {\r\n    return (\r\n        <div>\r\n            {\r\n                <li className=\"singleitem\" >\r\n                    <a  target=\"_blank\" href={props.content.recipe.shareAs}>\r\n                {props.content.recipe.image  &&   <img className=\"card-img-top\" src={props.content.recipe.image} alt={props.content.recipe.label}/>}\r\n        {!props.content.recipe.image &&     <img className=\"card-img-top\" src=\"https://images.media-allrecipes.com/images/82579.png\" alt={props.content.recipe.label}/>\r\n        \r\n        }\r\n                   </a>\r\n                <h5 className=\"card-title\">  <a  target=\"_blank\" href={props.content.recipe.shareAs}>{props.content.recipe.label}</a></h5>\r\n            <hr></hr>\r\n           <div id=\"subsection\">\r\n               <p> <span className=\"green\">{props.content.recipe.ingredients.length} </span>ingredients</p>\r\n               <p> <span className=\"green_1\">{(props.content.recipe.calories/10).toFixed(2)} </span>calories</p>\r\n           </div>\r\n\r\n                \r\n                <hr></hr>\r\n                  <p id=\"source\">By {props.content.recipe.source}</p>\r\n              \r\n                </li>\r\n              \r\n              \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Singlerecipe from './Singlerecipe';\r\n\r\nexport default function Recipe(props) {\r\n    return (\r\n   <ul id=\"list\">\r\n\r\n   \r\n            {\r\n    props.result.map((recipe,index)=><Singlerecipe key={index} content={recipe}/>) \r\n   }\r\n   </ul>\r\n\r\n      \r\n       \r\n    )\r\n}\r\n","\nimport React, { Component } from 'react'\nimport Searchbar from './components/Searchbar';\nimport instance from  './utils/axios';\nimport Recipe from './components/Recipe';\nimport Loader from 'react-loader-spinner';\nimport './App.css'\nimport Navbar from './components/Navbar'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\n\nexport default class App extends Component {\n  constructor(){\n    console.log(\"constructor\");\n    super();\n    this.initialstate={\n      query:\"\",\n      result:[],\n      loading:false\n\n    }\n    this.state=this.initialstate\n\n  }\n  componentDidMount(){\n    console.log(\"Component Did Mount\");\n}\ncomponentWillMount(){\n    console.log(\"Component Will Mount\");\n    this.handleSubmit(\"velvet\");\n    // var obj={\n    //   query:\"if i can't have you\"\n    // }\n    // this.handleSubmit(obj);\n}\nhandleChange=(value)=>{\n  this.setState({query:value},()=>{\n    console.log(this.state);\n\n  })\n\n\n}\nhandleSubmit=(query)=>{\n  this.setState({loading:true,result:[]},()=>{\n    console.log(query);\n    const APP_ID=\"6eb07360\";\n    const APP_KEY=\"e0ec11225de5124cb41bc9ff29d273d0\";\n    var pr= instance.get('/search',{\n         \n      params:{\n       \n        \n    \n        q: `${query}`,\n        app_id:APP_ID,\n        app_key:APP_KEY\n  \n       \n    }\n  });\n  pr.then(data=>{\n    console.log(data.data.hits);\n    this.setState({result:data.data.hits,loading:false,query:\"\"},()=>{\n      console.log(\"after set state\",this.state.result);\n    })\n  }).catch(err=>{\n    console.log(\"err is\",err)\n  \n  }).finally(function(){\n    console.log(\"always executed\");\n    \n    \n  })\n  })\n\n}\n  render() {\n    console.log(\"rendering\");\n    return (\n      <div >\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-transparent\">\n  <a class=\"navbar-brand\" href=\"#\">\n      {/* <img src=\"https://secureimages.allrecipes.com/ar-images/ARlogo.svg\"></img> */}\n      <img src=\"https://www.edamam.com/assets/img/small-logo.png\"></img>\n      <img src=\"https://www.edamam.com/assets/img/logo.png\"></img>\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n     \n      \n      <Searchbar handleChange={this.handleChange} query={this.state.query} handleSubmit={this.handleSubmit} />\n      \n    \n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n   \n       \n      \n      {/* <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> */}\n      {/* <button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\">Open Modal</button> */}\n      {/* <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Create Profile</button> */}\n    </form>\n  </div>\n</nav>\n  \n   \n    <div className=\"container\" >\n    <div className=\"row\" >\n        <div id=\"content\">\n        {this.state.loading &&  <img id=\"loader\" src=\"https://cdn.dribbble.com/users/645440/screenshots/3266490/loader-2_food.gif\" />}\n    {/* <Loader type=\"BallTriangle\" color=\"#somecolor\" height={80} width={80} /> */}\n    <Recipe result={this.state.result}/>\n    </div>\n    </div>\n    </div>\n    \n    \n    \n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}